import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.nio.MappedByteBuffer;
import java.nio.channels.FileChannel;
import java.nio.charset.Charset;
import java.util.HashMap;
public class Errorcorrecting {
    private static String readFileAsString(String filePath)
    throws java.io.IOException{
        StringBuffer fileData = new StringBuffer(1000);
        BufferedReader reader = new BufferedReader(
                new FileReader(filePath));
        char[] buf = new char[1024];
        int numRead=0;
        while((numRead=reader.read(buf)) != -1){
            String readData = String.valueOf(buf, 0, numRead);
            fileData.append(readData);
            buf = new char[1024];
        }
        reader.close();
        return fileData.toString();
    }
	public static void main(String[] args){
//	String alfabe= new String("ABC*DEFG!HI$JKLMNO#PRS@TU\"VYZ");
	String wm2="",wm3="",wm4="",wm5="";
	String metin = null;
	HashMap<String, Double > wmhash = new HashMap<String, Double >(550000);
	ObjectInputStream ois;
	FileInputStream fis;
	try {
		fis= new FileInputStream("t.tmp");
		ois= new ObjectInputStream(fis);
	} catch (FileNotFoundException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	} catch (IOException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
	try {
	metin = readFileAsString("türkçe_metin.txt");
	StringBuilder met=new StringBuilder(metin);
	for (int index = 0; index < metin.length();
	index++) {
	     char aChar = metin.charAt(index);
	     if (aChar=='›'){
	    	 met.setCharAt(index, '*');
	     }
	}

	for (int i = 0; i < met.length()/31; i++) {
		int no =1+ (int) (Math.random() * (28));
		if(!Character.isWhitespace(met.charAt(i*31+no))){
		met.setCharAt(i*31+no, 'x');
		}
	}
	System.out.print(met.toString());
	wm2 = readFileAsString("2_cewm.txt");
	} catch (IOException e) {
		e.printStackTrace();
	}
	long startTime = System.currentTimeMillis();
	String lines[] = wm2.split("\\r?\\n");

	for (int i = 0; i < 29; i++) {
		for (int j = 6+(34*i); j < 6+29+(34*i); j++) {
			String[] words = lines[j].split("\\s+");
			if (Double.parseDouble(words[4])!=0) {
			wmhash.put(words[1], new Double(words[4]));
			}
		}
	}
	try {
		wm3 = readFileAsString("3_cewm.txt");
	} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
	}
	lines = wm3.split("\\r?\\n");
	for (int k = 0; k < 29; k++) {
		for (int i = 0; i < 29; i++) {
			for (int j = 7 + i * (29 + 4)+k*(953+6); j < 7 + 29 + i * (29 + 4)+k*(953+6); j++) {
				String words[] = lines[j].split("\\s+");
//				System.out.print(words[0]);
//				System.out.print("k="+k+"i="+i+"j="+j + "\n");
				if (Double.parseDouble(words[3])!=0) {
					wmhash.put(words[0], new Double(words[3]));
				}
			}
		}
	}
	try {
		wm4 = readFileAsString("4_cewm.txt");
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	lines = wm4.split("\\r?\\n");
	for (int p = 0; p < 29; p++) {
		for (int k = 0; k < 29; k++) {
			for (int i = 0; i < 29; i++) {
				for (int j = 6 + i * (29 + 4) + k * (33 * 29)+p*(1+29*29*33); j < 6 + 29 + i
						* (29 + 4) + k * (33 * 29)+p*(1+29*29*33); j++) {
					String words[] = lines[j].split("\\s+");
		//			System.out.print(words[0]);
		//			System.out.print("k=" + k + "i=" + i + "j=" + j + "\n");
					if (Double.parseDouble(words[3]) != 0) {
						wmhash.put(words[0], new Double(words[3]));
					}
				}
			}
		}
	}
	try {
		wm5 = readFileAsString("5_cewm.txt");
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	lines = wm5.split("\\r?\\n");
	for (int i = 7; i < lines.length; i++) {
		String words[]={"","","",""};
		words = lines[i].split("\\s+");
//		System.out.print(words[0]);
//		System.out.print("k=" + k + "i=" + i + "j=" + j + "\n");
		if (words[0].length()==5) {
			if (words[0].charAt(4)!='x'){
				if (Double.parseDouble(words[3]) != 0) {
					wmhash.put(words[0], new Double(words[3]));
				}
			}
		}
	}
	long endTime   = System.currentTimeMillis();
	long totalTime = endTime - startTime;
	System.out.println(totalTime+"\n");
	System.out.println("Size of HashMap : " + wmhash.size());
	FileOutputStream fos;
	ObjectOutputStream oos;
	try {
		fos = new FileOutputStream("t.tmp");
		oos = new ObjectOutputStream(fos);
		oos.writeObject(wmhash);
		oos.close();
	} catch (FileNotFoundException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	try {
		System.in.read();
	} catch (IOException e) {
		// TODO Auto-generated catch block
		e.printStackTrace();
	}
	
}
}
